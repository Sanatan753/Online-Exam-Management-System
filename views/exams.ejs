<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>exams</title>
    <link rel="stylesheet" href="style.css">
    <style>
        body {
          margin: 0;
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: column;
          width: 100%;
          height: 100vh;
          padding: 20px;
          font-family: 'DM Sans', sans-serif;;
          font-size: 12px;
          overflow-x: hidden;
          overflow-y: hidden;
          background-image: linear-gradient(21deg, rgba(64, 83, 206, 0.3697003234675773) 68%, rgba(255, 206, 196, 0.5) 163%),linear-gradient(163deg, rgba(49, 146, 170, 0.07944489965716128) 86%, rgba(239, 112, 138, 0.5) 40%),linear-gradient(30deg, rgba(76, 79, 173, 0.6173675716587805) 22%, rgba(237, 106, 134, 0.5) 169%),linear-gradient(48deg, rgba(31, 85, 147, 0.7323890641868473) 64%, rgba(247, 126, 132, 0.5) 43%); background-blend-mode: overlay,multiply,color,normal;
            }
        .task-manager {
            display: flex;
            justify-content: space-between;
            width: 95%;
            height: 95%;
            background: #fff;
            border-radius: 4px;
            box-shadow:
            0 0.3px 2.2px rgba(0, 0, 0, 0.011),
            0 0.7px 5.3px rgba(0, 0, 0, 0.016),
            0 1.3px 10px rgba(0, 0, 0, 0.02),
            0 2.2px 17.9px rgba(0, 0, 0, 0.024),
            0 4.2px 33.4px rgba(0, 0, 0, 0.029),
            0 10px 80px rgba(0, 0, 0, 0.04);
            overflow: hidden;
        }
        h1{
            text-align: center;
            font-size: 20px;
            font-family: 'Arial', sans-serif;
            color: #ffffff;
            background-color: rgb(69, 69, 69);
            text-transform: uppercase;
            margin: auto;
            padding: 10px 0;
        }
        .card_container{
          margin-top: 20px;
          position: absolute;
          left: 6%;
          /* border: 2px solid red; */
          max-width: max-content;
          display: flex;
          flex-wrap: wrap;
          gap: 20px; /* Adds space between cards */
        }
        .card {
          background-color: #bbbbbb;
          padding: 10px;
          border-radius: 5px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          padding: 10px;
          margin-bottom: 10px;
        }
        button{
          background-color: #28a745;
            color: #fff;
            border: none;
            padding: 5px 10px;
            font-size: 14px;
            border-radius: 3px;
            cursor: pointer;
            align-self: flex-end;
            margin-top: auto;
        }
        button:hover{
          background-color: #218838;
        }
    </style>
</head>
<body>
  <div class="task-manager">
    <div class="card_container">
      <% for (let exam of exams) {%>
        <div class="card">
          <h1>Exam ID:<%=exam.examid.slice(0,10) %></h1>
          <p><strong>Course:</strong> <%=exam.course%></p>
          <p><strong>Date:</strong> <%= new Date(exam.date).toLocaleDateString('en-GB') %></p>
          <p><strong>Start time:</strong> <%=exam.time%></p>
          <p><strong>Duration:</strong> <%=exam.duration%> mins</p>
          <p><strong>Subject:</strong> <%=exam.subject%></p>
          <% if (isExamOver(exam.date, exam.time, exam.duration)) { %>
            <p>Exam has already ended.</p>
          <% } else if (isExamStarted(exam.date, exam.time)) { %>
            <p>Exam has not started yet.</p>
          <% } else { %>
            <button onclick="enterExam('<%= encodeURIComponent(exam.course) %>','<%= encodeURIComponent(exam.time) %>','<%= encodeURIComponent(exam.duration) %>','<%= encodeURIComponent(exam.examid)%>','<%= encodeURIComponent(studentId)%>')">Start Exam</button>
        </div>
        <% } %>
         <script>
            function enterExam(course,time,duration,examid,studentid) {
              try {
                const examcourse = course;
                const exam_id = examid;
                const student_id = studentid;
                if (!course) {
                  throw new Error('Missing or invalid data');
                }
                const url = `/exampanel?course=${encodeURIComponent(examcourse)}&examid=${encodeURIComponent(exam_id)}&studentid=${encodeURIComponent(student_id)}`;
                // console.log('Redirect URL:', url); // Log the constructed URL for debugging
                window.location.href = url;
              } catch (error) {
                console.error('Error redirecting to dashboard:', error.message);
                // Handle the error, e.g., display an alert to the user
                alert('Error redirecting to dashboard. Please try again later.');
              }
            }
        </script>
    <%}%>
  </div>
</div>
</body>
</html>